View(rain_fail)
View(sun_outfoxed)
View(rain_tidy)
sun_outfoxed <- spread(sun_fail, key = col_names, value = values)
head(sun_outfoxed)
rain_outfoxed <- spread(rain_fail, key = col_names, value = values)
head(rain_outfoxed)
sun_outfoxed <- spread(sun_fail, key = col_names, value = values) %>%
select(year, season, sun)
head(sun_outfoxed)
rain_outfoxed <- spread(rain_fail, key = col_names, value = values) %>%
select(year, season, rain)
head(rain_outfoxed)
kable(table1_mod)
traffic_scot <- migration_scot %>%
select(DateCode, Value, Sex, Age, `Migration Source`, `Migration Type`) %>%
filter(DateCode == '2016',
Age == 'All',
Sex != 'All',
`Migration Type` != 'Net')
library(tidyverse)
migration_scot <- read_csv("free_movement_uk.csv") #downloaded from the Scottish Government Stats website
traffic_scot <- migration_scot %>%
select(DateCode, Value, Sex, Age, `Migration Source`, `Migration Type`) %>%
filter(DateCode == '2016',
Age == 'All',
Sex != 'All',
`Migration Type` != 'Net')
ggplot()
ggplot(traffic_scot, aes(x = Sex, y = Value))
ggplot(diamonds, aes(depth, colour = cut)) +
geom_density() +
xlim(55, 70) +
theme_bw()
ggplot(diamonds, aes(clarity, price)) +
geom_boxplot(aes(fill = cut), outlier.shape = NA) +
theme_bw() +
theme_bw()
df <- data.frame(group = c("A", "B", "C"), outcome = c(2.3, 1.9, 3.2))
ggplot(df, aes(group, outcome, fill = group)) +
geom_col()+
theme_bw()
ggplot(economics, aes(date, unemploy)) +
geom_line()+
theme_bw() +
labs(y = 'unemployment')
x <- seq(0.01, .99, length.out = 100)
df <- data.frame(
x = rep(x, 2),
y = c(qlogis(x), 2 * qlogis(x)),
group = rep(c("A","B"),
each = 100)
)
ggplot(df, aes(x=x, y=y, group=group)) + geom_line(aes(colour = group), linetype = 1) +
theme_bw() +
labs(y = 'Bank balance\n(pos=debit, neg=credit)',
x = 'Probability of being happy')
x <- seq(0.01, .99, length.out = 100)
df <- data.frame(
x = rep(x, 2),
y = c(qlogis(x), 2 * qlogis(x)),
group = rep(c("A","B"),
each = 100)
)
ggplot(df, aes(x=x, y=y, group=group)) + geom_line(aes(colour = group), linetype = 1, size = 2) +
theme_bw() +
labs(y = 'Bank balance\n(pos=debit, neg=credit)',
x = 'Probability of being happy')
ggplot(traffic_scot, aes(x = Sex, y = Value)) +
geom_col()
ggplot(traffic_scot, aes(x = Sex, y = Value, fill = `Migration Type`)) +
geom_col(position = 'dodge')
ggplot(traffic_scot, aes(x = Sex, y = Value, fill = `Migration Type`)) +
geom_col()
ggplot(traffic_scot, aes(x = Sex, y = Value, fill = `Migration Type`)) +
geom_col(position = 'fill')
ggplot(traffic_scot, aes(x = Sex, y = Value, fill = `Migration Type`, colour =`Migration Source`)) +
geom_col(position = 'dodge')
ggplot(traffic_scot, aes(x = Sex, y = Value, fill = `Migration Type`, linetype =`Migration Source`)) +
geom_col(position = 'dodge')
ggplot(traffic_scot, aes(x = Sex, y = Value, fill = `Migration Type`, alpha =`Migration Source`)) +
geom_col(position = 'dodge')
ggplot(traffic_scot, aes(x = Sex, y = Value, fill = `Migration Type`, colour =`Migration Source`)) +
geom_col(position = 'dodge')
View(traffic_scot)
traffic_scot2 <- migration_scot %>%
filter(Age == 'All',
`Migration Type` != 'Net',
Sex == 'All') %>%
select(DateCode, Value,`Migration Source`, `Migration Type`)
ggplot(traffic_scot2, aes(DateCode, Value,
shape = `Migration Source`,
colour = `Migration Type`)) +
geom_point()
ggplot(traffic_scot2, aes(DateCode, Value,
shape = `Migration Source`,
colour = `Migration Type`)) +
geom_point() +
geom_line()
female_migration <- migration_scot %>%
filter(Sex == 'Female',
`Migration Source` == 'To-from Overseas',
Age == 'All',
`Migration Type` != 'Net')
ggplot(female_migration, aes(x = `Migration Type`, y = Value)) +
geom_boxplot()
ggplot(female_migration, aes(x = `Migration Type`, y = Value)) +
geom_violin()
female_migration <- migration_scot %>%
filter(Sex == 'Female',
`Migration Source` == 'To-from Overseas',
Age == 'All',
`Migration Type` != 'Net')
ggplot(female_migration, aes(x = `Migration Type`, y = Value), fill = `Migration Type`) +
geom_boxplot()
ggplot(female_migration, aes(x = `Migration Type`, y = Value), fill = `Migration Type`) +
geom_violin()
female_migration <- migration_scot %>%
filter(Sex == 'Female',
`Migration Source` == 'To-from Overseas',
Age == 'All',
`Migration Type` != 'Net')
ggplot(female_migration, aes(x = `Migration Type`, y = Value, fill = `Migration Type`)) +
geom_boxplot()
ggplot(female_migration, aes(x = `Migration Type`, y = Value, fill = `Migration Type`)) +
geom_violin()
traffic_scot <- read_csv("free_movement_uk.csv")
my_data <- traffic_scot %>%
filter(Age %in% c('21 years', '41 years')) %>%
select(DateCode, Value, Age, Sex, `Migration Source`, `Migration Type`) %>%
filter(DateCode %in% c('2013', '2018'),
`Migration Type` != 'Net',
`Migration Source` == 'To-from Overseas',
Sex == 'All')
q6 <- ggplot(my_data, aes(`Migration Type`, Value)) +
geom_col()
q6
q7 <- ggplot(my_data, aes(`Migration Type`, Value, fill = as.character(DateCode))) +
geom_col(position = 'dodge')
q7
q8 <-ggplot(my_data, aes(`Migration Type`, Value, fill = Age)) +
geom_col(position = 'dodge')
q8
library(tidyverse)
migration_scot <- read_csv("free_movement_uk.csv")
traffic_scot <- migration_scot %>%
select(DateCode, Value, Sex,
`Migration Source`, `Migration Type`, Age) %>%
filter(DateCode == '2016', Age == 'All',
Sex != 'All', `Migration Type` != 'Net')
rest_of_uk <- traffic_scot %>%
filter(`Migration Source` == 'To-from Rest of UK')
ggplot(NULL) + NULL
ggplot(rest_of_uk, aes(x = Sex, y = Value,
fill = `Migration Type`)) +
geom_col(position = 'dodge')
overseas <- NULL
ggplot(NULL) + NULL
overseas<- traffic_scot %>%
filter(`Migration Source` == 'To-from Overseas')
ggplot(overseas, aes(x = Sex, y = Value,
fill = `Migration Type`)) +
geom_col(position = 'dodge')
traffic_scot <- migration_scot %>%
select(DateCode, Value, Sex,
`Migration Source`, `Migration Type`, Age) %>%
filter(DateCode == '2016', Age == 'All',
Sex != 'All', `Migration Type` != 'Net')
rest_of_uk <- traffic_scot %>%
filter(`Migration Source` == 'To-from Rest of UK')
library(tidyverse)
migration_scot <- read_csv("free_movement_uk.csv")
traffic_scot <- migration_scot %>%
select(DateCode, Value, Sex,
`Migration Source`, `Migration Type`, Age) %>%
filter(DateCode == '2016', Age == 'All',
Sex != 'All', `Migration Type` != 'Net')
rest_of_uk <- traffic_scot %>%
filter(`Migration Source` == 'To-from Rest of UK')
ggplot(rest_of_uk, aes(x = Sex, y = Value,
fill = `Migration Type`)) +
geom_col(position = 'dodge')
overseas<- traffic_scot %>%
filter(`Migration Source` == 'To-from Overseas')
ggplot(overseas, aes(x = Sex, y = Value,
fill = `Migration Type`)) +
geom_col(position = 'dodge')
ggplot(traffic_scot, aes(x = Sex, y = Value,
fill = `Migration Type`)) +
geom_col(position = 'dodge') +
facet_grid(.~`Migration Source`)
boxes <- migration_scot %>%
filter(Sex == 'Female',
`Migration Source` == 'To-from Overseas',
Age == 'All',
`Migration Type` != 'Net')
ggplot(boxes, aes(x = `Migration Type`, y = Value)) +
geom_violin(aes(fill = `Migration Type`)) +
geom_boxplot(aes(alpha = 0.5))
ggplot(boxes, aes(x = `Migration Type`, y = Value, fill = `Migration Type`, alpha = 0.5)) +
geom_violin() +
geom_boxplot()
ggplot(boxes, aes(x = `Migration Type`, y = Value)) +
geom_violin(aes(fill = `Migration Type`)) +
geom_boxplot(aes(alpha = 0.5)) +
theme_bw()
ggplot(boxes, aes(x = `Migration Type`, y = Value)) +
geom_violin(aes(fill = `Migration Type`)) +
geom_boxplot(aes(alpha = 0.5)) +
theme_bw()+
labs(title = 'Female migration to and from Overseas into Scotland',
x = 'Migration direction',
y = 'Number of people')
ggplot(boxes, aes(x = `Migration Type`, y = Value)) +
geom_violin(aes(fill = `Migration Type`)) +
geom_boxplot(aes(alpha = 0.5)) +
theme_bw()+
labs(title = 'Female migration to and from\nOverseas into Scotland',
x = 'Migration direction',
y = 'Number of people') +
theme(
axis.title.x = element_text(size = 12),
title = element_text(size = 20),
axis.title.y = element_blank()
)
ggplot(boxes, aes(x = `Migration Type`, y = Value)) +
geom_violin(aes(fill = `Migration Type`)) +
geom_boxplot(aes(alpha = 0.5)) +
scale_fill_manual(values = c('#127d69', '#cedc00')) +
theme_bw() +
labs(title = 'Female migration to and from\nOverseas into Scotland',
x = 'Migration direction',
y = 'Number of people') +
theme(
axis.title.x = element_text(size = 12),
title = element_text(size = 20),
axis.title.y = element_blank()
)
ggplot(boxes, aes(x = `Migration Type`, y = Value)) +
geom_violin(aes(fill = `Migration Type`)) +
geom_boxplot(aes(alpha = 0.5), show.legend = FALSE) + # hide the legend
scale_fill_manual(values = c('#127d69', '#cedc00'),
labels = c('Coming to Scotland',
'Leaving Scotland')) +
theme_bw() +
labs(title = 'Female migration to and from\nOverseas into Scotland',
x = 'Migration direction',
y = 'Number of people') +
theme(
axis.title.x = element_text(size = 12),
title = element_text(size = 20),
axis.title.y = element_blank(),
legend.position = 'bottom', #move the legend to the bottom
legend.title = element_text(size = 10)
)
ggplot(boxes, aes(x = `Migration Type`, y = Value)) +
geom_violin(aes(fill = `Migration Type`)) +
geom_boxplot(aes(alpha = 0.5), show.legend = FALSE) +
scale_fill_manual(values = c('#127d69', '#cedc00'),
labels = c('Coming to Scotland',
'Leaving Scotland')) +
scale_x_discrete(labels = c('In' = 'Coming to Scotland',
'Out' = 'Leaving Scotland')) +
theme_bw() +
labs(title = 'Female migration to and from\nOverseas into Scotland',
x = 'Migration direction',
y = 'Number of people') +
theme(
axis.title.x = element_text(size = 12),
title = element_text(size = 20),
axis.title.y = element_blank(),
legend.position = 'bottom',
legend.title = element_text(size = 10)
)
traffic_scot2 <- migration_scot %>%
filter(Age == 'All',
`Migration Type` != 'Net',
Sex == 'All') %>%
select(DateCode, Value,`Migration Source`, `Migration Type`)
ggplot(traffic_scot2, aes(DateCode, Value,
shape = `Migration Source`,
colour = `Migration Type`)) +
geom_point() +
geom_line() +
scale_x_continuous(limits = c(2002,2018), breaks = c(2002:2018))
traffic_scot <- migration_scot %>%
select(DateCode, Value, Sex,
`Migration Source`, `Migration Type`, Age) %>%
filter(DateCode == '2016', Age == 'All',
Sex != 'All', `Migration Type` != 'Net')
rest_of_uk <- traffic_scot %>%
filter(`Migration Source` == 'To-from Rest of UK')
ggplot(rest_of_uk, aes(x = Sex, y = Value,
fill = `Migration Type`)) +
geom_col(position = 'dodge')
overseas<- traffic_scot %>%
filter(`Migration Source` == 'To-from Overseas')
ggplot(overseas, aes(x = Sex, y = Value,
fill = `Migration Type`)) +
geom_col(position = 'dodge')
ggplot(traffic_scot, aes(x = Sex, y = Value,
fill = `Migration Type`)) +
geom_col(position = 'dodge') +
facet_grid(.~`Migration Source`)
boxes <- migration_scot %>%
filter(Sex == 'Female',
`Migration Source` == 'To-from Overseas',
Age == 'All',
`Migration Type` != 'Net')
ggplot(boxes, aes(x = `Migration Type`, y = Value)) +
geom_violin(aes(fill = `Migration Type`)) +
geom_boxplot(aes(alpha = 0.5))
ggplot(boxes, aes(x = `Migration Type`, y = Value, fill = `Migration Type`, alpha = 0.5)) +
geom_violin() +
geom_boxplot()
ggplot(boxes, aes(x = `Migration Type`, y = Value, fill = `Migration Type`, alpha = 0.5)) +
geom_violin() +
geom_boxplot()
ggplot(boxes, aes(x = `Migration Type`, y = Value)) +
geom_violin(aes(fill = `Migration Type`)) +
geom_boxplot(aes(alpha = 0.5)) +
theme_bw()
ggplot(boxes, aes(x = `Migration Type`, y = Value)) +
geom_violin(aes(fill = `Migration Type`)) +
geom_boxplot(aes(alpha = 0.5)) +
theme_bw()+
labs(title = 'Female migration to and from Overseas into Scotland',
x = 'Migration direction',
y = 'Number of people')
ggplot(boxes, aes(x = `Migration Type`, y = Value)) +
geom_violin(aes(fill = `Migration Type`)) +
geom_boxplot(aes(alpha = 0.5)) +
scale_fill_manual(values = c('#127d69', '#cedc00')) +
theme_bw() +
labs(title = 'Female migration to and from\nOverseas into Scotland',
x = 'Migration direction',
y = 'Number of people') +
theme(
axis.title.x = element_text(size = 12),
title = element_text(size = 20),
axis.title.y = element_blank()
)
ggplot(boxes, aes(x = `Migration Type`, y = Value)) +
geom_violin(aes(fill = `Migration Type`)) +
geom_boxplot(aes(alpha = 0.5), show.legend = FALSE) + # hide the legend
scale_fill_manual(values = c('#127d69', '#cedc00'),
labels = c('Coming to Scotland',
'Leaving Scotland')) +
theme_bw() +
labs(title = 'Female migration to and from\nOverseas into Scotland',
x = 'Migration direction',
y = 'Number of people') +
theme(
axis.title.x = element_text(size = 12),
title = element_text(size = 20),
axis.title.y = element_blank(),
legend.position = 'bottom', #move the legend to the bottom
legend.title = element_text(size = 10)
)
ggplot(boxes, aes(x = `Migration Type`, y = Value)) +
geom_violin(aes(fill = `Migration Type`)) +
geom_boxplot(aes(alpha = 0.5), show.legend = FALSE) +
scale_fill_manual(values = c('#127d69', '#cedc00'),
labels = c('Coming to Scotland',
'Leaving Scotland')) +
scale_x_discrete(labels = c('In' = 'Coming to Scotland',
'Out' = 'Leaving Scotland')) +
theme_bw() +
labs(title = 'Female migration to and from\nOverseas into Scotland',
x = 'Migration direction',
y = 'Number of people') +
theme(
axis.title.x = element_text(size = 12),
title = element_text(size = 20),
axis.title.y = element_blank(),
legend.position = 'bottom',
legend.title = element_text(size = 10)
)
traffic_scot2 <- migration_scot %>%
filter(Age == 'All',
`Migration Type` != 'Net',
Sex == 'All') %>%
select(DateCode, Value,`Migration Source`, `Migration Type`)
ggplot(traffic_scot2, aes(DateCode, Value,
shape = `Migration Source`,
colour = `Migration Type`)) +
geom_point() +
geom_line() +
scale_x_continuous(limits = c(2002,2018), breaks = c(2002:2018))
plot1 <- ggplot(traffic_scot2, aes(DateCode, Value,
shape = `Migration Source`,
colour = `Migration Type`)) +
geom_point() +
geom_line() +
theme_bw()
ggsave('myplot.png', plot1, width = 9 , height = 6)
demonstration <- read_csv("cars_for_sale.csv")
install.packages("webexercises")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
devtools::install_github('rstudio/htmltools')
devtools::install_github('rstudio/htmltools')
devtools::install_github('rstudio/htmltools')
install.packages("devtools")
install.packages("devtools", lib="C:/R-4.1.3/library")
shinyintro::clone("basic_template", "myapps/newapp")#
devtools::install_github("debruine/shinyintro")
library(tidyverse)
sun <- read_csv("wos_seasonal_sun.csv")
rain <- read_csv("wos_seasonal_rain.csv")
library(tidyverse)
sun <- read_csv("wos_seasonal_sun.csv")
rain <- read_csv("wos_seasonal_rain.csv")
sun <- read_csv("wos_seasonal_sun.csv")
sun <- read_csv("wos_seasonal_sun.csv")
rain <- read_csv("wos_seasonal_rain.csv")
fake_data <- mutate(fake_data, Grade = ifelse(Grade_points %in% 18:22, "A",
ifelse(Grade_points %in% 15:17, "B",
ifelse(Grade_points %in% 12:14, "C",
ifelse(Grade_points %in% 9:11, "D",
ifelse(Grade_points %in% 6:8, "E",
ifelse(Grade_points %in% 3:5, "F",
ifelse(Grade_points %in% 1:2, "G","H"))))))))
fake_data <- mutate(fake_data, Institution_ifelse = ifelse(Institution == 1, "UoG",
ifelse(Institution == 3, "GCU",
ifelse(Institution ==  4, "UWS", "Strathclyde"))))
library(tidyverse)
library(tidyverse)
table1
rename(table1, Country = country,
Population = population)
select(table1, Country = country,
Population = population)
set.seed(999) #so we all get the same random data
fake_data <- tibble(PP_ID = 1:40,
Sex = c(rep(1,17), rep(2,20), rep(3,3)),
Age = sample(16:40, 40, replace = TRUE),
Institution = sample(c(rep(1,10), rep(2,8), rep(3,10), rep(4,10), rep(99,2))),
Grade_points = sample(c(0,9:22), 40, replace = TRUE))
glimpse(fake_data)
kable(fake_data)
fake_data_sex <- fake_data %>%
filter(Sex != "Other") %>% # this step could actually be left out
group_by(Institution, Sex) %>%
summarise(Average_gp = mean(Grade_points)) %>%
ungroup() %>%
pivot_wider(Sex, Average_gp) %>%
select(Institution, Males = Male, Females = Female) %>%
mutate(Better = ifelse(Males > Females, "male", "female"))
View(fake_data)
fake_data_sex <- fake_data %>%
filter(Sex != "Other") %>% # this step could actually be left out
group_by(Institution, Sex) %>%
summarise(Average_gp = mean(Grade_points)) %>%
ungroup() %>%
fake_data_sex <- fake_data %>%
filter(Sex != "Other") %>% # this step could actually be left out
group_by(Institution, Sex) %>%
summarise(Average_gp = mean(Grade_points)) %>%
ungroup()
fake_data_sex <- fake_data %>%
filter(Sex != "Other") %>% # this step could actually be left out
group_by(Institution, Sex) %>%
summarise(Average_gp = mean(Grade_points)) %>%
ungroup()
View(fake_data_sex)
View(fake_data)
View(fake_data_sex)
fake_data_sex <- fake_data %>%
filter(Sex != "Other") %>% # this step could actually be left out
group_by(Institution, Sex) %>%
summarise(Average_gp = mean(Grade_points)) %>%
ungroup() %>%
pivot_wider(names_from=Sex, values_from=Average_gp) %>%
select(Institution, Males = Male, Females = Female) %>%
mutate(Better = ifelse(Males > Females, "male", "female"))
fake_data_sex <- fake_data %>%
filter(Sex != "Other") %>% # this step could actually be left out
group_by(Institution, Sex) %>%
summarise(Average_gp = mean(Grade_points)) %>%
ungroup() %>%
pivot_wider(names_from=Sex, values_from=Average_gp)
